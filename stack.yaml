AWSTemplateFormatVersion: '2010-09-09'
Resources:
  RedirectorS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::Region}.bloons.io-redirector"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
         - ServerSideEncryptionByDefault:
             SSEAlgorithm: AES256
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: "bloons.io"
          Protocol: http
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::Region}.bloons.io"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
         - ServerSideEncryptionByDefault:
             SSEAlgorithm: AES256
      WebsiteConfiguration:
        IndexDocument: index.html
        RoutingRules:
          - RedirectRule:
              HostName: "ninjakiwi.com"
              ReplaceKeyWith: "dhpiggott/status/1149011739478024193"
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal: "*"
            Action:
              - "s3:GetObject"
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: S3Bucket
                  - "/*"
  CloudFrontViewerCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: "bloons.io"
      SubjectAlternativeNames:
        - "bloons.io"
      DomainValidationOptions:
        - DomainName: "bloons.io"
          ValidationDomain: "bloons.io"
  RedirectorDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - "bloons.io"
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: "CustomS3Origin"
            DomainName: !Select [
              1,
              !Split [ "//", !GetAtt RedirectorS3Bucket.WebsiteURL ]
            ]
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: "CustomS3Origin"
          ViewerProtocolPolicy: allow-all
          ForwardedValues:
            QueryString: false
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFrontViewerCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016
  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - "bloons.io"
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: "CustomS3Origin"
            DomainName: !Select [ 1, !Split [ "//", !GetAtt S3Bucket.WebsiteURL ] ]
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: "CustomS3Origin"
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
          Compress: true
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFrontViewerCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016
  RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: "bloons.io"
      RecordSets:
        - AliasTarget:
            HostedZoneId: "Z2FDTNDATAQYW2"
            DNSName: !GetAtt RedirectorDistribution.DomainName
          Name: "bloons.io"
          Type: A
        - AliasTarget:
            HostedZoneId: "Z2FDTNDATAQYW2"
            DNSName: !GetAtt RedirectorDistribution.DomainName
          Name: "bloons.io"
          Type: AAAA
        - AliasTarget:
            HostedZoneId: "Z2FDTNDATAQYW2"
            DNSName: !GetAtt Distribution.DomainName
          Name: "bloons.io"
          Type: A
        - AliasTarget:
            HostedZoneId: "Z2FDTNDATAQYW2"
            DNSName: !GetAtt Distribution.DomainName
          Name: "bloons.io"
          Type: AAAA
